package main

import (
  "encoding/binary"
)

const (
  _ = iota
  ATT_OPCODE_ERROR uint8 = iota
  ATT_OPCODE_MTU_REQUEST
  ATT_OPCODE_MTU_RESPONSE
  ATT_OPCODE_FIND_INFO_REQUEST
  ATT_OPCODE_FIND_INFO_RESPOSE
  ATT_OPCODE_FIND_BY_TYPE_VALUE_REQUEST
  ATT_OPCODE_FIND_BY_TYPE_VALUE_RESPOSE
  ATT_OPCODE_READ_BY_TYPE_REQUEST
  ATT_OPCODE_READ_BY_TYPE_RESPOSE
  ATT_OPCODE_READ_REQUEST
  ATT_OPCODE_READ_RESPOSE
  ATT_OPCODE_READ_BLOB_REQUEST
  ATT_OPCODE_READ_BLOB_RESPOSE
  ATT_OPCODE_READ_MULTIPLE_REQUEST
  ATT_OPCODE_READ_MULTIPLE_RESPOSE
  ATT_OPCODE_READ_BY_GROUP_TYPE_REQUEST
  ATT_OPCODE_READ_BY_GROUP_TYPE_RESPOSE
  ATT_OPCODE_WRITE_REQUEST
  ATT_OPCODE_WRITE_RESPOSE
)

func FindInfoRequest(startHandle, endHandle uint16) []byte {
  res := make([]byte, 5)
  res[0] = ATT_OPCODE_FIND_INFO_REQUEST

  binary.LittleEndian.PutUint16(res[1:], startHandle)
  binary.LittleEndian.PutUint16(res[3:], endHandle)

  return res
}

